---
import { Icon } from "astro-icon/components";
import { Image } from 'astro:assets';
import * as colores from "../../public/colors.json";

import type { ImageMetadata } from 'astro';

type Colores = { [key: string]: string };

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/proyects/*.{jpeg,jpg,png,gif,webp}');
console.log(images)

const typedColores = colores as Colores;


let proyects = [
  {
    name: ["Dashboard"],
    desc: "Aplicación de gestión de inventario para la diplomatura de programación de la UTN. La aplicación permite gestionar stock, crear productos, manejar un carrito de compras con cálculos de precios, impuestos y envíos, analizar transacciones, gestionar impuestos, y administrar múltiples cuentas. Cuenta con notificaciones de bajo stock y es de código abierto.",
    source: "https://github.com/bbauti/dashboard",
    img: '/src/assets/proyects/inventoryapp.webp',
    link: "dashboard",
    status: "",
    lenguagesColor: ["HTML", "CSS", "SCSS", "JavaScript", "Svelte", "Vite"],
    lenguages: ["HTML", "CSS", "SCSS", "JS", "Svelte", "Vite"],
  },
  {
    name: ["Inventory App", "1rem"],
    desc: "Aplicación web para el control del inventario de una institución escolar. Fui responsable del frontend, la documentación y las tareas de DevOps. La aplicación, implementada en un servidor propio con CI/CD para actualizaciones automáticas, permitía a los maestros controlar el inventario escolar y localizar objetos en diferentes salones. Todo se creó desde cero, incluyendo correos y autenticación. Se uso la metodologia SCRUM.",
    source: "https://bitbucket.org/arrudeboy/inventory/src",
    img: '/src/assets/proyects/inventoryapp.webp',
    link: "",
    status: "wip",
    lenguagesColor: [
      "Python",
      "Python",
      "Jinja2",
      "JavaScript",
      "HTML",
      "CSS",
      "SQL",
    ],
    lenguages: ["PY", "Flask", "Jinja2", "JS", "HTML", "CSS", "SQL"],
  } /*
  {
    name: ["Todo App"],
    desc: "Pagina web para gestionar tareas con el uso de localStorage.",
    source: "https://github.com/bbauti/p5todoapp",
    img: "todoapp",
    link: "https://bbauti.github.io/p5todoapp",
    status: "done",
    lenguagesColor: ["HTML", "CSS", "JavaScript"],
    lenguages: ["HTML", "CSS", "JS"],
  },
  {
    name: ["Weather Channel"],
    desc: "Pagina web para obtener informacion sobre el clima.",
    source: "https://github.com/bbauti/p5weatherChannel",
    img: "weatherchannel",
    link: "https://bbauti.github.io/p5weatherChannel",
    status: "done",
    lenguagesColor: ["HTML", "CSS", "JavaScript"],
    lenguages: ["HTML", "CSS", "JS"],
  },
  {
    name: ["Color Game"],
    desc: "Juego sobre adivinar un color en formato rgb, con cuadrados de colores aleatorios.",
    source: "https://github.com/bbauti/p5colorgame",
    img: "colorgame",
    link: "https://bbauti.github.io/p5colorgame",
    status: "done",
    lenguagesColor: ["HTML", "CSSimagePath", "JavaScript"],
    lenguages: ["HTML", "CSS", "JS"],
  }, */
];

const checkColor = (leng: keyof Colores): string => {
  const color = typedColores[leng];
  return color ? color : "#fff";
};
---

<section class="mb-8">
  <h2 class="w-fit mx-auto mb-4 font-semibold text-lg md:text-xl relative">
    Proyectos destacados
  </h2>
  <div
    id="cards"
    class="flex flex-col gap-4 items-center"
  >
    {
      proyects.map((proyect, index) => (
        <article class='hover:shadow-xl transition-all ease-in-out w-fit h-fit rounded-[30px] overflow-hidden'>
          <section class="flex gap-4 flex-col md:flex-row">
            <div class="p-[1rem] md:max-w-[34ch] w-full flex flex-col gap-2">
              <header class="text-xl font-[600] flex items-center gap-2 select-none">
                <p class="ptitle">{proyect.name[0]}</p>
                <div class="flex items-center gap-2">
                  <div class="icon-card bg-[#AFAFAF]/10 hover:bg-[#AFAFAF]/40 hover:-translate-y-[1px] p-1 transition-all ease-in-out rounded-md">
                    <a
                      href={proyect.source}
                      class="git"
                      aria-label="git"
                      target="_blank"
                    >
                      <Icon name="mdi:git" />
                    </a>
                  </div>
                  {proyect.status === "done" ? (
                    <div class="icon-card bg-[#AFAFAF]/10 hover:bg-[#AFAFAF]/40 hover:color-[#AFAFAF] hover:-translate-y-[1px] p-1 transition-all ease-in-out rounded-md">
                      <a href={proyect.link} aria-label="link" class="done" target="_blank">
                        <Icon name="mdi:external-link" />
                      </a>
                    </div>
                  ) : proyect.status === "wip" ? (
                    <div class="icon-card disabled bg-[#AFAFAF]/10 p-1 rounded-md">
                      <Icon name="mdi:construction" />
                    </div>
                  ) : null}
                </div>
              </header>
              <div class="flex flex-wrap gap-1 select-none">
                {proyect.lenguages.map((leng, index) => (
                  <div
                    class="border text-sm border-accent/20 rounded-lg flex items-center justify-center px-2 shadow-sm"
                    style={{ backgroundColor: checkColor(proyect.lenguagesColor[index])+'50' }}
                  >
                    <span
                      class="lengColor"
                      style={{
                        color: checkColor(proyect.lenguagesColor[index]),
                      }}
                    >
                      ●
                    </span>
                    <span class="leng">{leng}</span>
                  </div>
                ))}
              </div>
              <div class="select-none">
                <p class="leading-[1.325] tracking-wide	">{proyect.desc}</p>
              </div>
            </div>
            <figure class="w-fit h-fit my-auto">
              <Image
                src={images[proyect.img]()}
                alt={proyect.name[0]}
                class="z-50 relative rounded-[25px] border border-gray-300 p-[0.1rem] max-h-full ml-auto"
              />
            </figure>
          </section>
        </article>
      ))
    }
  </div>
</section>

<style>
  .cards {
    width: 100%;
  }

  article > section {
    display: flex;
    justify-content: space-between;
    max-width: 1000px;
    position: relative;
    border: 1px solid #e2e8f0;
    background-color: #f5f5f5;
    padding: 0.8rem;
    box-shadow:
      rgba(0, 0, 0, 0.05) 0px -3px 0px 0px inset,
      rgb(255, 255, 255) 0px 0px 0px 2px inset,
      rgba(0, 0, 0, 0.06) 0px 4px 2px 0px inset,
      rgba(0, 0, 0, 0.04) 0px 0px 24px 4px inset,
      rgba(0, 0, 0, 0.12) 0px 1px 3px 0px;
    width: 100%;
    height: 100%;
    border-radius: 30px;
    margin: 0 auto;
  }

</style>
