---
import { Icon } from "astro-icon/components";
import { Image } from 'astro:assets';
import * as colores from "../../public/colors.json";

import type { ImageMetadata } from 'astro';

type Colores = { [key: string]: string };

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/projects/*.{jpeg,jpg,png,gif,webp}');

const typedColores = colores as Colores;


let projects = [
  {
    name: ["Iberojet"],
    desc: "Lideré la reconstrucción del frontend de la plataforma de viajes de Iberojet utilizando Vue 3 y Nuxt 3 con TypeScript. El proyecto incluyó un panel de control de operaciones de vuelo en tiempo real, un CMS multilingüe y características complejas como selectores de asientos y procesamiento de pagos. Optimicé el rendimiento e implementé una arquitectura multidominio que atiende a varios mercados internacionales, demostrando mi capacidad para entregar soluciones frontend complejas a gran escala.",
    source: "",
    img: '/src/assets/projects/iberojet.webp',
    link: "https://mexico.iberojet.com/",
    status: "done",
    languagesColor: ["Vue", "TypeScript", "JavaScript", "HTML", "CSS", "Vue"],
    languages: ["Vue", "TS", "JS", "HTML", "CSS", "Nuxt"],
  },
  {
    name: ["Punto Bazar"],
    desc: "Aplicación de gestión de inventario para la diplomatura de programación de la UTN. La aplicación permite gestionar stock, crear productos, manejar un carrito de compras con cálculos de precios, impuestos y envíos, analizar transacciones, gestionar impuestos, y administrar múltiples cuentas. Cuenta con notificaciones de bajo stock y es de código abierto.",
    source: "https://github.com/bbauti/dashboard",
    img: '/src/assets/projects/dashboard.webp',
    link: "https://dash.bbauti.ar/",
    status: "done",
    languagesColor: ["HTML", "CSS", "SCSS", "JavaScript", "Svelte", "Vite"],
    languages: ["HTML", "CSS", "SCSS", "JS", "Svelte", "Vite"],
  },
  {
    name: ["Inventory App", "1rem"],
    desc: "Aplicación web para el control del inventario de una institución escolar. Fui responsable del frontend, la documentación y las tareas de DevOps. La aplicación, implementada en un servidor propio con CI/CD para actualizaciones automáticas, permitía a los maestros controlar el inventario escolar y localizar objetos en diferentes salones. Todo se creó desde cero, incluyendo correos y autenticación. Se uso la metodologia SCRUM.",
    source: "https://bitbucket.org/arrudeboy/inventory/src",
    img: '/src/assets/projects/inventoryapp.webp',
    link: "",
    status: "wip",
    languagesColor: [
      "Python",
      "Python",
      "Jinja2",
      "JavaScript",
      "HTML",
      "CSS",
      "SQL",
    ],
    languages: ["PY", "Flask", "Jinja2", "JS", "HTML", "CSS", "SQL"],
  } /*
  {
    name: ["Todo App"],
    desc: "Pagina web para gestionar tareas con el uso de localStorage.",
    source: "https://github.com/bbauti/p5todoapp",
    img: "todoapp",
    link: "https://bbauti.github.io/p5todoapp",
    status: "done",
    languagesColor: ["HTML", "CSS", "JavaScript"],
    languages: ["HTML", "CSS", "JS"],
  },
  {
    name: ["Weather Channel"],
    desc: "Pagina web para obtener informacion sobre el clima.",
    source: "https://github.com/bbauti/p5weatherChannel",
    img: "weatherchannel",
    link: "https://bbauti.github.io/p5weatherChannel",
    status: "done",
    languagesColor: ["HTML", "CSS", "JavaScript"],
    languages: ["HTML", "CSS", "JS"],
  },
  {
    name: ["Color Game"],
    desc: "Juego sobre adivinar un color en formato rgb, con cuadrados de colores aleatorios.",
    source: "https://github.com/bbauti/p5colorgame",
    img: "colorgame",
    link: "https://bbauti.github.io/p5colorgame",
    status: "done",
    languagesColor: ["HTML", "CSSimagePath", "JavaScript"],
    languages: ["HTML", "CSS", "JS"],
  }, */
];

const checkColor = (lang: keyof Colores): string => {
  const color = typedColores[lang];
  return color ? color : "#fff";
};
---

<section class="mb-8">
  <h2 class="w-fit mx-auto mb-4 font-semibold text-lg md:text-xl relative">
    Proyectos destacados
  </h2>
  <div
    id="cards"
    class="flex flex-col gap-4 items-center w-full"
  >
    {
      projects.map(project => (
        <article class='hover:shadow-xl transition-all ease-in-out w-fit h-fit rounded-[30px] overflow-hidden'>
          <section class="flex gap-4 shadow-project-outline dark:shadow-project-outline-dark bg-[#f5f5f5] dark:bg-[#121212] flex-col md:flex-row justify-between max-w-[1000px] relative mx-auto p-[0.8rem] rounded-[30px] w-full h-full ">
            <div class="p-[1rem] md:max-w-[34ch] w-full flex flex-col gap-2">
              <header class="text-xl font-[600] flex items-center gap-2 select-none">
                <p class="ptitle">{project.name[0]}</p>
                <div class="flex items-center gap-2">
                  {project.source &&
                    <div class="icon-card hover:-translate-y-[1px] bg-[#AFAFAF]/10 dark:bg-[#4A4A4A]/10 hover:bg-[#AFAFAF]/40 dark:hover:bg-[#4A4A4A]/40 p-1 transition-all ease-in-out rounded-md">
                      <a
                        href={project.source}
                        class="git"
                        aria-label="git"
                        target="_blank"
                      >
                        <Icon name="mdi:git" />
                      </a>
                    </div>
                  }
                  {project.status === "done" ? (
                    <div class="icon-card icon-card-text bg-[#AFAFAF]/10 hover:color-[#AFAFAF] dark:hover:color-[#4A4A4A] dark:bg-[#4A4A4A]/10 hover:-translate-y-[1px] p-1 transition-all ease-in-out rounded-md">
                      <a href={project.link} aria-label="link" class="done" target="_blank">
                        <Icon name="mdi:external-link" />
                      </a>
                    </div>
                  ) : project.status === "wip" ? (
                    <div class="icon-card disabled bg-[#AFAFAF]/10 dark:bg-[#4A4A4A]/10 p-1 rounded-md">
                      <Icon name="mdi:construction" />
                    </div>
                  ) : null}
                </div>
              </header>
              <div class="flex flex-wrap gap-1 select-none">
                {project.languages.map((lang, index) => (
                  <div
                    class="border text-sm border-white/20 dark:border-black/20 rounded-lg flex items-center justify-center gap-1 px-2 shadow-sm"
                    style={{ backgroundColor: checkColor(project.languagesColor[index])+'50' }}
                  >
                    <span
                      class="langColor"
                      style={{
                        color: checkColor(project.languagesColor[index]),
                      }}
                    >
                      ●
                    </span>
                    <span class="lang">{lang}</span>
                  </div>
                ))}
              </div>
              <div class="select-none">
                <p class="leading-[1.325] tracking-wide	">{project.desc}</p>
              </div>
            </div>
            <figure class="w-fit h-fit my-auto">
              <Image
                src={images[project.img]()}
                alt={project.name[0]}
                class="z-50 relative rounded-[25px] border border-gray-300 dark:border-gray-600 p-[0.1rem] max-h-full ml-auto"
              />
            </figure>
          </section>
        </article>
      ))
    }
  </div>
</section>